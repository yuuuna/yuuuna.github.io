<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GIT on Yuuna Place</title>
    <link>https://blog.yuuna.dev/categories/git/</link>
    <description>Recent content in GIT on Yuuna Place</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Sun, 30 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.yuuna.dev/categories/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[GIT] 跨 Repo 取得 commit 或 MR 資料</title>
      <link>https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/</link>
      <pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/</guid>
      <description>簡介 此篇文章主要使用 Command 的方式來操作，會先介紹一下會使用到的各個 Command 使用方法與功用，再介紹三種可以跨 Repository 取得 Commit 或 Merge Request (or Pull Request) 的方式。
Command 介紹 這邊預設對 Git 有一定的基礎 (clone、pull、push、log&amp;hellip;)，故僅介紹此篇主要使用的相關 Command。
remote Remote 為管理遠端 Repository 的功能，並可對每個連結的 Repository 設定名稱。
在 git clone 之後，會有一個預設的名稱 origin，這是 git 給的預設名稱。
可以使用 git remote 查看目前有設定的 remote。
$ git clone git@github.com:yuuuna/main-project.git Cloning into &amp;#39;main-project&amp;#39;... remote: Enumerating objects: 3, done. remote: Counting objects: 100% (3/3), done. remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0 Receiving objects: 100% (3/3), done.</description>
    </item>
    
  </channel>
</rss>
