<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Yuuna Place</title>
        <link>https://blog.yuuna.dev/</link>
        <description>Recent content on Yuuna Place</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-TW</language>
        <lastBuildDate>Sun, 30 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.yuuna.dev/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>[GIT] 跨 Repo 取得 commit 或 MR 資料</title>
        <link>https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/</link>
        <pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/</guid>
        <description>&lt;h2 id=&#34;簡介&#34;&gt;簡介&lt;/h2&gt;
&lt;p&gt;此篇文章主要使用 Command 的方式來操作，會先介紹一下會使用到的各個 Command 使用方法與功用，再介紹三種可以跨 Repository 取得 Commit 或 Merge Request (or Pull Request) 的方式。&lt;/p&gt;
&lt;h2 id=&#34;command-介紹&#34;&gt;Command 介紹&lt;/h2&gt;
&lt;p&gt;這邊預設對 Git 有一定的基礎 (clone、pull、push、log&amp;hellip;)，故僅介紹此篇主要使用的相關 Command。&lt;/p&gt;
&lt;h3 id=&#34;remote&#34;&gt;remote&lt;/h3&gt;
&lt;p&gt;Remote 為管理遠端 Repository 的功能，並可對每個連結的 Repository 設定名稱。&lt;/p&gt;
&lt;p&gt;預設在 &lt;code&gt;git clone&lt;/code&gt; 之後，會有一個預設的 &lt;code&gt;origin&lt;/code&gt; 名稱，這是 git 給的預設名稱。&lt;br&gt;
可以使用 &lt;code&gt;git remote&lt;/code&gt; 查看目前有設定的 remote。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git clone git@github.com:yuuuna/main-project.git
Cloning into &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;main-project&amp;#39;&lt;/span&gt;...
remote: Enumerating objects: 3, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
remote: Counting objects: 100% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3/3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
remote: Total &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;delta 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, reused &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;delta 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, pack-reused &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
Receiving objects: 100% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3/3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.

$ cd main-project

$ git remote
origin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用 &lt;code&gt;git remote -v&lt;/code&gt; 可以查看名稱 + Repository Url。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git remote -v
origin	git@github.com:yuuuna/main-project.git &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;fetch&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
origin	git@github.com:yuuuna/main-project.git &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;push&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用 &lt;code&gt;git remote add &amp;lt;名稱&amp;gt; &amp;lt;git repo url&amp;gt;&lt;/code&gt; 新增連結的遠端 Repository。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git remote add sub git@github.com:yuuuna/sub-project.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以檢查一下剛剛新增的 remote，確認關聯成功！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git remote
origin
sub

$ git remote -v
origin	git@github.com:yuuuna/main-project.git &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;fetch&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
origin	git@github.com:yuuuna/main-project.git &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;push&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
sub	git@github.com:yuuuna/sub-project.git &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;fetch&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
sub	git@github.com:yuuuna/sub-project.git &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;push&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;目前設定了一個 &lt;code&gt;sub&lt;/code&gt; 的遠端，但是可以發現目前沒有抓取此 Repo 的任何資訊，使用 &lt;code&gt;git log&lt;/code&gt; 可觀察到目前還不認識 sub 裡面 master 這個分支。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git log sub/master
fatal: ambiguous argument &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sub/master&amp;#39;&lt;/span&gt;: unknown revision or path not in the working tree.
Use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;--&amp;#39;&lt;/span&gt; to separate paths from revisions, like this:
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;git &amp;lt;command&amp;gt; [&amp;lt;revision&amp;gt;...] -- [&amp;lt;file&amp;gt;...]&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那接下來進入下個章節 &lt;code&gt;fetch&lt;/code&gt; 學習抓取 &lt;code&gt;sub&lt;/code&gt; 這個遠端的資訊。&lt;/p&gt;
&lt;h3 id=&#34;fetch&#34;&gt;fetch&lt;/h3&gt;
&lt;p&gt;Fetch 可以抓取遠端資訊，把目前還沒載下來的資訊都抓下來。&lt;/p&gt;
&lt;p&gt;現在我們把上一個指令中新增的 &lt;code&gt;sub&lt;/code&gt; Repository 下載下來。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git fetch sub
remote: Enumerating objects: 6, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
remote: Counting objects: 100% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;6/6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
remote: Compressing objects: 100% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3/3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
remote: Total &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;delta 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, reused &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;delta 0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, pack-reused &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
Unpacking objects: 100% &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;6/6&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;832&lt;/span&gt; bytes | 166.00 KiB/s, &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;.
From github.com:yuuuna/sub-project
 * &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;new branch&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;      master     -&amp;gt; sub/master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以驗證一下，現在下載完成了，再試一下 &lt;code&gt;git log&lt;/code&gt;，可以查看到 sub 的 master 分支 commit 內容囉！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git log sub/master

commit 19f7e1c17d4635733c96e1d512a3e5da2cbf2161 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;sub/master&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Author: Yuuna &amp;lt;k9532121@gmail.com&amp;gt;
Date:   Sun May &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; 15:21:11 &lt;span style=&#34;color:#ae81ff&#34;&gt;2021&lt;/span&gt; +0800

    Initial commit
&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;END&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;cherry-pick&#34;&gt;cherry pick&lt;/h3&gt;
&lt;p&gt;cherry-pick 的功能是「撿分支」，假如你目前的分支只想要其他分支的某幾個 Commit，那就很適合使用 cherry-pick 這個功能。&lt;/p&gt;
&lt;p&gt;使用方法為：&lt;code&gt;git cherry-pick &amp;lt;commit SHA&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;目前專案分支如下，有兩條分支 &lt;code&gt;master&lt;/code&gt;、&lt;code&gt;create-menu&lt;/code&gt;。
&lt;img src=&#34;image-1.png&#34; style=&#34;width: 70%; height: ; border: 1px #000 solid;&#34;&gt;&lt;/p&gt;
&lt;p&gt;那現在想要將 &lt;code&gt;create-menu&lt;/code&gt; 的 &lt;code&gt;91ccde&lt;/code&gt;(Create menu txt.) 紀錄放到 &lt;code&gt;master&lt;/code&gt; 分支上，&lt;br&gt;
但不希望 &lt;code&gt;056791&lt;/code&gt;(Update menu txt.) 也併到 &lt;code&gt;master&lt;/code&gt; 上，&lt;br&gt;
那這個情境就很適合使用 cherry-pick 這個方法。&lt;/p&gt;
&lt;p&gt;僅要將目前的分支先切到 &lt;code&gt;master&lt;/code&gt;，然後使用 cherry-pick 想要的紀錄(&lt;code&gt;91ccde&lt;/code&gt;)，即可完成囉！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git cherry-pick 91ccde
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;master 6550d7d&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Create menu txt.
 Date: Sun May &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; 17:03:46 &lt;span style=&#34;color:#ae81ff&#34;&gt;2021&lt;/span&gt; +0800
 &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; file changed, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; insertions&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;+&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
 create mode &lt;span style=&#34;color:#ae81ff&#34;&gt;100644&lt;/span&gt; menu.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再觀察一下線圖，可以看到 Commit 紀錄也存在於 &lt;code&gt;master&lt;/code&gt; 的分支上囉～
&lt;img src=&#34;image-2.png&#34; style=&#34;width: 70%; height: ; border: 1px #000 solid;&#34;&gt;&lt;/p&gt;
&lt;p&gt;PS. 若是只想要這個 Commit 的修改紀錄，但是不要有 Commit 的送出紀錄，可以加上 &lt;code&gt;--no-commit&lt;/code&gt;，那僅會將調整紀錄放至暫存區。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ git cherry-pick 91ccde --no-commit

$ git status
On branch master
Your branch is behind &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;origin/master&amp;#39;&lt;/span&gt; by &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; commit, and can be fast-forwarded.
  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git pull&amp;#34;&lt;/span&gt; to update your local branch&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

Changes to be committed:
  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git restore --staged &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to unstage&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	new file:   menu.txt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;diff&#34;&gt;diff&lt;/h3&gt;
&lt;p&gt;Diff 為比對檔案的修改紀錄，可以比對當前修改的有哪些、或是哪些 commit 區間的修改紀錄，接下來介紹幾個比較常用的方法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git diff&lt;/code&gt;：比對當前的修改紀錄，此比對是在執行 &lt;code&gt;git add&lt;/code&gt; 之前的檔案。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git diff --cached&lt;/code&gt;：這個比對的時機點是 &lt;code&gt;git add&lt;/code&gt; 之後，&lt;code&gt;git commit&lt;/code&gt; 之前，適用於執行 commit 之前做的檢查！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git diff &amp;lt;commit SHA&amp;gt;&lt;/code&gt;：這個會比對填入的 commit SHA ~ 當前工作目錄區間的修改紀錄。若想要看上一個 Commit 的紀錄，可以使用 &lt;code&gt;git diff HEAD^&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git diff &amp;lt;start commit SHA&amp;gt; &amp;lt;finish commit SHA&amp;gt;&lt;/code&gt;：這個就是比對兩個 commit 區間的修改紀錄囉。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;簡單對一個檔案進行了調整，使用 &lt;code&gt;git diff&lt;/code&gt; 呈現如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;diff --git a/index.txt b/index.txt
index 102db4a..853827d 100644
&lt;span style=&#34;color:#f92672&#34;&gt;--- a/index.txt
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+++ b/index.txt
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;@@ -1 +1,3 @@
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; Add txt
&lt;span style=&#34;color:#a6e22e&#34;&gt;+
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+Update txt
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;(END)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;這個應該蠻好懂的，大部分可能會使用 IDE 來幫助我們去看修改紀錄，不過這個指令搭配 &lt;code&gt;apply&lt;/code&gt; 其實就可以幫助我們匯入此次調整紀錄！&lt;/p&gt;
&lt;h3 id=&#34;apply&#34;&gt;apply&lt;/h3&gt;
&lt;p&gt;Apply 對一般使用 git 的人應該會比較陌生，Apply 的功能簡單講的話，就是同意一個 Diff 檔案的修改紀錄，而這個 Diff 檔案就是由 &lt;code&gt;git diff&lt;/code&gt; 來產生。&lt;/p&gt;
&lt;p&gt;那同意一個 Diff 檔案是什麼意思？&lt;br&gt;
他會將這個 Diff 檔案的修改紀錄，都放到暫存區裡面。&lt;/p&gt;
&lt;p&gt;說這麼多可能還是很模糊，直接來看實作比較好暸解！&lt;br&gt;
這是 Diff 檔案的樣子，其實就是 &lt;code&gt;git diff&lt;/code&gt; 後的結果XD
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;diff --git a/index.txt b/index.txt
new file mode 100644
index 0000000..102db4a
&lt;span style=&#34;color:#f92672&#34;&gt;--- /dev/null
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+++ b/index.txt
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;@@ -0,0 +1 @@
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+Add txt
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;那要把這個 Diff 放到暫存區，只要執行 &lt;code&gt;git apply &amp;lt;diff file&amp;gt;&lt;/code&gt; 即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# diff 的檔案名稱為 add.diff&lt;/span&gt;
$ git apply add.diff

&lt;span style=&#34;color:#75715e&#34;&gt;# 完成 apply 了，使用 status 檢查一下，確認已經進入暫存區了&lt;/span&gt;
$ git status
On branch master
Your branch is up to date with &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;origin/master&amp;#39;&lt;/span&gt;.

Untracked files:
  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git add &amp;lt;file&amp;gt;...&amp;#34;&lt;/span&gt; to include in what will be committed&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	index.txt

nothing added to commit but untracked files present &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;git add&amp;#34;&lt;/span&gt; to track&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;format-patch&#34;&gt;format patch&lt;/h3&gt;
&lt;p&gt;在 GitHub 或是 GitLab 上，其實都可以直接產出 format-patch 這個功能後的檔案，&lt;br&gt;
這個檔案內容是使用 email 的格式，範例如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-patch&#34; data-lang=&#34;patch&#34;&gt;From a61120f0a011bbd51688808e8ba91f2af39dbcd4 Mon Sep 17 00:00:00 2001
From: Yuuna &amp;lt;k9532121@gmail.com&amp;gt;
Date: Sun, 30 May 2021 17:02:01 +0800
Subject: [PATCH] Add index.txt

&lt;span style=&#34;color:#f92672&#34;&gt;---
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt; index.txt | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 index.txt

diff --git a/index.txt b/index.txt
new file mode 100644
index 0000000..102db4a
&lt;span style=&#34;color:#f92672&#34;&gt;--- /dev/null
&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+++ b/index.txt
&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;@@ -0,0 +1 @@
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;+Add txt
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;am&#34;&gt;am&lt;/h3&gt;
&lt;h2 id=&#34;實作取得跨-repository-取得紀錄&#34;&gt;實作：取得跨 Repository 取得紀錄&lt;/h2&gt;
&lt;p&gt;這邊將運用上面 Command 的介紹，組合出三種不同的方法，並可依照不同的情境來選擇方法。&lt;/p&gt;
&lt;h3 id=&#34;方法一remote--cherry-pick&#34;&gt;方法一：remote + cherry pick&lt;/h3&gt;
&lt;p&gt;這個方法最好懂，也最適合新手，方法就是去撿想要的 Commit 紀錄過來。&lt;/p&gt;
&lt;p&gt;流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 &lt;code&gt;git remote&lt;/code&gt; 遠端想要的 Repository&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;git fetch&lt;/code&gt; 剛剛設定的 Remote&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;git cherry-pick&lt;/code&gt; 把想要的分支撿過來，就完成囉！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那現在以案例來實作，目前有兩專案 &lt;code&gt;main-project&lt;/code&gt;、&lt;code&gt;sub-project&lt;/code&gt;，而 commit 紀錄如下圖：
&lt;figure style=&#34;flex-grow: 253; flex-basis: 608px&#34;&gt;
		&lt;a href=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-1.png&#34; data-size=&#34;1328x524&#34;&gt;&lt;img src=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-1.png&#34;
				srcset=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-1_hue21b6b390192e926a684edc25d83eb38_115769_480x0_resize_box_2.png 480w, https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-1_hue21b6b390192e926a684edc25d83eb38_115769_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1328&#34;
				height=&#34;524&#34;
				loading=&#34;lazy&#34;
				alt=&#34;main-project&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;main-project&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure style=&#34;flex-grow: 323; flex-basis: 776px&#34;&gt;
		&lt;a href=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-3.png&#34; data-size=&#34;1358x420&#34;&gt;&lt;img src=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-3.png&#34;
				srcset=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-3_huc7a28c1db8fa0cb0a97653b25999543f_69239_480x0_resize_box_2.png 480w, https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-3_huc7a28c1db8fa0cb0a97653b25999543f_69239_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1358&#34;
				height=&#34;420&#34;
				loading=&#34;lazy&#34;
				alt=&#34;sub-project&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;sub-project&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;目前想要在 &lt;code&gt;main-project&lt;/code&gt; 的 master 分支新增 &lt;code&gt;sub-project&lt;/code&gt; 的 &lt;code&gt;a61120&lt;/code&gt; Commit 紀錄，&lt;br&gt;
操作如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 1. Remote 需要的 Repository&lt;/span&gt;
$ git clone git@github.com:yuuuna/main-project.git

&lt;span style=&#34;color:#75715e&#34;&gt;# 2. Fetch 剛剛 Remote 的遠端資訊下來&lt;/span&gt;
$ git fetch sub

&lt;span style=&#34;color:#75715e&#34;&gt;# [驗證] 可以看想要的 commit SHA&lt;/span&gt;
$ git log sub/master

&lt;span style=&#34;color:#75715e&#34;&gt;# 3. cherry-pick 需要的分支過來&lt;/span&gt;
$ git cherry-pick a61120f0a011bbd51688808e8ba91f2af39dbcd4

&lt;span style=&#34;color:#75715e&#34;&gt;# 推送遠端，完成！&lt;/span&gt;
$ git push&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;觀察 git graph，有成功將 Commit 紀錄新增在 &lt;code&gt;main-project&lt;/code&gt; 的 &lt;code&gt;master&lt;/code&gt; 中了。&lt;/p&gt;
&lt;img src=&#34;image-4.png&#34; style=&#34;width: 70%; height: ; border: 1px #000 solid;&#34;&gt;
&lt;h3 id=&#34;方法二diff--apply&#34;&gt;方法二：diff + apply&lt;/h3&gt;
&lt;p&gt;若你是熟悉 Git 的使用，那這個方法你只要暸解了 &lt;code&gt;Diff&lt;/code&gt; 與 &lt;code&gt;Apply&lt;/code&gt; 的功能，可以知道其實也不會太難，輕鬆兩個指令就可以完成，也比起 &lt;code&gt;cherry-pick&lt;/code&gt; 的方法精簡一些。&lt;/p&gt;
&lt;p&gt;流程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 &lt;code&gt;git diff &amp;lt;commit 1&amp;gt; &amp;lt;commit 2&amp;gt; &amp;gt; update.diff&lt;/code&gt; 將調整紀錄輸出成一個檔案，這裡名稱為 &lt;code&gt;update.diff&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;到我要匯入的專案裡面，使用 &lt;code&gt;git apply update.diff&lt;/code&gt;，就會把修改紀錄會進去暫存區了！&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那現在以案例來實作，目前有兩專案 &lt;code&gt;main-project&lt;/code&gt;、&lt;code&gt;sub-project&lt;/code&gt;，而 commit 紀錄如下圖：
&lt;figure style=&#34;flex-grow: 466; flex-basis: 1118px&#34;&gt;
		&lt;a href=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-5.png&#34; data-size=&#34;1324x284&#34;&gt;&lt;img src=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-5.png&#34;
				srcset=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-5_huc597def0e394da70273861cea05b8ad2_61552_480x0_resize_box_2.png 480w, https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-5_huc597def0e394da70273861cea05b8ad2_61552_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1324&#34;
				height=&#34;284&#34;
				loading=&#34;lazy&#34;
				alt=&#34;main-project&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;main-project&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure style=&#34;flex-grow: 494; flex-basis: 1185px&#34;&gt;
		&lt;a href=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-6.png&#34; data-size=&#34;1324x268&#34;&gt;&lt;img src=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-6.png&#34;
				srcset=&#34;https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-6_huc5121b43edcd6f90c0d746a33454b2ab_63751_480x0_resize_box_2.png 480w, https://blog.yuuna.dev/p/git-%E8%B7%A8-repo-%E5%8F%96%E5%BE%97-commit-%E6%88%96-mr-%E8%B3%87%E6%96%99/image-6_huc5121b43edcd6f90c0d746a33454b2ab_63751_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1324&#34;
				height=&#34;268&#34;
				loading=&#34;lazy&#34;
				alt=&#34;sub-project&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;sub-project&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;目前想要在 &lt;code&gt;main-project&lt;/code&gt; 的 master 分支新增 &lt;code&gt;sub-project&lt;/code&gt; 的 &lt;code&gt;a61120&lt;/code&gt; Commit 紀錄，&lt;br&gt;
操作如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;先到 &lt;code&gt;sub-project&lt;/code&gt; 專案目錄下：
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 產生 Diff 檔案，需要的是 19f7e1 與 a61120 區間的修改紀錄&lt;/span&gt;
$ git diff 19f7e1 a61120 &amp;gt; update.diff&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;把 &lt;code&gt;update.diff&lt;/code&gt; 放至 &lt;code&gt;main-project&lt;/code&gt; 裡面，方便下個步驟直接使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;切到 &lt;code&gt;main-project&lt;/code&gt; 專案目錄下：
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 使用 apply 將 update.diff 匯入至暫存區&lt;/span&gt;
$ git apply update.diff&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;這樣就完成囉！&lt;br&gt;
只是這個方法是將調整紀錄放進暫存區，所以後續還要自己進行 &lt;code&gt;Commit&lt;/code&gt; 的動作，才能 &lt;code&gt;Push&lt;/code&gt; 呦&lt;br&gt;
那可以看接下來第三個方法，也是我最推薦最方便快速的！&lt;/p&gt;
&lt;h3 id=&#34;方法三format-patch--am&#34;&gt;方法三：format patch + am&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>Spring Framework 使用 Jasypt 加密 config 檔案</title>
        <link>https://blog.yuuna.dev/p/spring-framework-%E4%BD%BF%E7%94%A8-jasypt-%E5%8A%A0%E5%AF%86-config-%E6%AA%94%E6%A1%88/</link>
        <pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.yuuna.dev/p/spring-framework-%E4%BD%BF%E7%94%A8-jasypt-%E5%8A%A0%E5%AF%86-config-%E6%AA%94%E6%A1%88/</guid>
        <description>&lt;img src="https://blog.yuuna.dev/p/spring-framework-%E4%BD%BF%E7%94%A8-jasypt-%E5%8A%A0%E5%AF%86-config-%E6%AA%94%E6%A1%88/image.jpeg" alt="Featured image of post Spring Framework 使用 Jasypt 加密 config 檔案" /&gt;&lt;h2 id=&#34;jasypt-介紹&#34;&gt;Jasypt 介紹&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.jasypt.org/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Jasypt&lt;/a&gt; 為 Java 的套件，提供開發人員用簡單的方法將加解密功能加入專案裡，而開發人員也不需要對密碼學有深入的理解。&lt;/p&gt;
&lt;h3 id=&#34;特點&#34;&gt;特點&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;單向與雙向加密的安全性，使用標準的加密技術。&lt;/li&gt;
&lt;li&gt;提供了 DIGEST 演算法與 PBE(Password-Based Encryption) 演算法，Ex. MD5、SHA、SHA512、PBEWithMD5AndDES&amp;hellip;。&lt;/li&gt;
&lt;li&gt;提高使用者密碼的安全性。&lt;/li&gt;
&lt;li&gt;於 Spring 簡單使用加解密技術。&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.jasypt.org/features.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;更多其他特點&amp;hellip;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;使用-jasypt-cli-tools-加解密資料&#34;&gt;使用 Jasypt CLI Tools 加解密資料&lt;/h3&gt;
&lt;p&gt;要使用 Jasypt CLI Tools 需先於網站中下載檔案：&lt;a class=&#34;link&#34; href=&#34;http://www.jasypt.org/download.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Download&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;演算法的選擇&#34;&gt;演算法的選擇&lt;/h4&gt;
&lt;p&gt;​使用 &lt;code&gt;bin/listAlgorithms.sh&lt;/code&gt; 查看可使用的演算法清單。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ sh ./listAlgorithms.sh  
   
DIGEST ALGORITHMS:  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;MD2, MD5, SHA, SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, SHA-512/256&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  
   
PBE ALGORITHMS:   &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;PBEWITHHMACSHA1ANDAES_128, PBEWITHHMACSHA1ANDAES_256, PBEWITHHMACSHA224ANDAES_128, PBEWITHHMACSHA224ANDAES_256, PBEWITHHMACSHA256ANDAES_128, PBEWITHHMACSHA256ANDAES_256, PBEWITHHMACSHA384ANDAES_128, PBEWITHHMACSHA384ANDAES_256, PBEWITHHMACSHA512ANDAES_128, PBEWITHHMACSHA512ANDAES_256, PBEWITHMD5ANDDES, PBEWITHMD5ANDTRIPLEDES, PBEWITHSHA1ANDDESEDE, PBEWITHSHA1ANDRC2_128, PBEWITHSHA1ANDRC2_40, PBEWITHSHA1ANDRC4_128, PBEWITHSHA1ANDRC4_40&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id=&#34;加密&#34;&gt;加密&lt;/h4&gt;
&lt;p&gt;使用 &lt;code&gt;bin/encrypt.sh&lt;/code&gt; 來進行加密，執行此檔案可看到應填入的欄位有哪些。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ sh ./encrypt.sh

USAGE: encrypt.sh &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ARGUMENTS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

  * Arguments must apply to format:

      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arg1=value1 arg2=value2 arg3=value3 ...&amp;#34;&lt;/span&gt;

  * Required arguments:

      input
      password

  * Optional arguments:

      verbose
      algorithm
      keyObtentionIterations
      saltGeneratorClassName
      providerName
      providerClassName
      stringOutputType
      ivGeneratorClassName&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;​可觀察到必要填入有 &lt;code&gt;input&lt;/code&gt; 與 &lt;code&gt;password&lt;/code&gt; 兩個欄位。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;input&lt;/code&gt; 為要加密的文字。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;password&lt;/code&gt; 為加解密使用的 Key。&lt;/li&gt;
&lt;li&gt;​​​​[可選] &lt;code&gt;algorithm&lt;/code&gt; 為使用哪種演算法來加密。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那現在以 input 為 password123，password 為 CAT，而演算法選擇 PBEWithMD5AndDES 來進行加密。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ sh ./encrypt.sh input&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;password123 password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;CAT algorithm&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;PBEWithMD5AndDES

----ENVIRONMENT-----------------

Runtime: Azul Systems, Inc. OpenJDK 64-Bit Server VM 25.172-b01

----ARGUMENTS-------------------

algorithm: PBEWithMD5AndDES
input: password123
password: CAT

----OUTPUT----------------------

31wLpRHWtqh0XQOSLgLBLo2Rt2wDz4zj&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;這樣就完成了加密，而加密過後的密碼為 &lt;code&gt;31wLpRHWtqh0XQOSLgLBLo2Rt2wDz4zj&lt;/code&gt;，網站中就可以使用這組已加密的密碼。&lt;/p&gt;
&lt;h4 id=&#34;解密&#34;&gt;解密&lt;/h4&gt;
&lt;p&gt;可使用 &lt;code&gt;bin/decrypt.sh&lt;/code&gt; 進行解密，執行此檔案可看到應填入的欄位有哪些，基本上與加密相同。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ sh ./decrypt.sh

USAGE: decrypt.sh &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ARGUMENTS&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

  * Arguments must apply to format:

      &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;arg1=value1 arg2=value2 arg3=value3 ...&amp;#34;&lt;/span&gt;

  * Required arguments:

      input
      password

  * Optional arguments:

      verbose
      algorithm
      keyObtentionIterations
      saltGeneratorClassName
      providerName
      providerClassName
      stringOutputType
      ivGeneratorClassName&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;那現在將剛剛加密過後的密碼進行解密，input 為 31wLpRHWtqh0XQOSLgLBLo2Rt2wDz4zj，password 為 CAT，演算法為 PBEWithMD5AndDES。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ sh ./decrypt.sh input&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;31wLpRHWtqh0XQOSLgLBLo2Rt2wDz4zj password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;CAT algorithm&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;PBEWithMD5AndDES

----ENVIRONMENT-----------------

Runtime: Azul Systems, Inc. OpenJDK 64-Bit Server VM 25.172-b01

----ARGUMENTS-------------------

algorithm: PBEWithMD5AndDES
input: 31wLpRHWtqh0XQOSLgLBLo2Rt2wDz4zj
password: CAT

----OUTPUT----------------------

password123&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;​輸出結果得到 password123，成功進行解密。&lt;/p&gt;
&lt;h2 id=&#34;spring-framework-使用-jasypt-套件&#34;&gt;Spring Framework 使用 Jasypt 套件&lt;/h2&gt;
&lt;h3 id=&#34;匯入-jasypt-套件&#34;&gt;匯入 Jasypt 套件&lt;/h3&gt;
&lt;p&gt;於 &lt;code&gt;pom.xml&lt;/code&gt; 新增套件，&lt;br&gt;
套件版本的選擇若為 Sprint 3.0 或 3.1 使用 &lt;code&gt;jasypt-spring31&lt;/code&gt; 版本，&lt;br&gt;
若為 Sprint 4.0 使用 &lt;code&gt;jasypt-spring4&lt;/code&gt; 版本，本文以使用 4.0 版本。&lt;br&gt;
其他版本可於網站中尋找：&lt;a class=&#34;link&#34; href=&#34;http://www.jasypt.org/spring31.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;網站&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.jasypt&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jasypt&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.9.3&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.jasypt&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;jasypt-spring4&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.9.3&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;調整-spring-配置&#34;&gt;調整 Spring 配置&lt;/h3&gt;
&lt;p&gt;設定環境變數與套件相關配置。&lt;/p&gt;
&lt;p&gt;這邊設定 Key 的方法有兩種，&lt;br&gt;
第一種是直接寫在設定檔案裡，name 設定 password，value 給予 Key，&lt;br&gt;
第二種是設定在 Server 的環境變數裡，name 設定 passwordEnvName，value 給予環境變數名稱。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 設定環境變數 --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;environmentVariablesConfiguration&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;algorithm&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PBEWithMD5AndDES&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 方法一：將 key 直接設定在這裡 --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CAT&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 方法二：將 key 設定在 Server 的環境變數 --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;passwordEnvName&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WEB_PASSWORD&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- 解密配置值設定 --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;configurationEncryptor&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.jasypt.encryption.pbe.StandardPBEStringEncryptor&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;config&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;environmentVariablesConfiguration&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Spring Properties 設定 --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;bean&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org.jasypt.spring4.properties.EncryptablePropertyPlaceholderConfigurer&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;constructor-arg&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ref=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;configurationEncryptor&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;property&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;locations&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;classpath:web.properties&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/list&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;在 Spring Properties 設定中的 class 需要依照版本設定不同設定檔，&lt;br&gt;
而本文是使用 Spring 4.0，所以使用 org.jasypt.spring4.properties.EncryptablePropertyPlaceholderConfigurer，&lt;br&gt;
若為 Spring 3.1，則使用 org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer，&lt;br&gt;
其他版本設定於網站中確認：&lt;a class=&#34;link&#34; href=&#34;http://www.jasypt.org/spring31.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;網站&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最後將 properties 檔案裡面需要加密的部分使用 &lt;code&gt;ENC(&amp;lt;已加密的密碼&amp;gt;)&lt;/code&gt; 包起來，就大功告成啦！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;;width:100%&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;web.user         = webuser
web.password     = ENC(31wLpRHWtqh0XQOSLgLBLo2Rt2wDz4zj)&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h4 id=&#34;key-設定在環境變數&#34;&gt;Key 設定在環境變數&lt;/h4&gt;
&lt;p&gt;若將 Key 直接設定在 xml 裡，這樣假若系統程式被駭，Key 會直接也被取得的話根本功虧一簣，
這邊講解在配置中使用 passwordEnvName 來把 Key 設定在環境變數，伺服器應該怎麼做設定。&lt;/p&gt;
&lt;p&gt;設定環境變數其實不難，假若是設定 passwordEnvName = WEB_PASSWORD，環境變數設定為 WEB_PASSWORD，
那只要在 &lt;code&gt;/&amp;lt;tomcat&amp;gt;/bin/setenv.sh&lt;/code&gt; 檔案中新增一行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;export WEB_PASSWORD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;CAT&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可能會覺得這樣不是只是換個地方放嗎，若伺服器檔案都被竊取了，這個環境變數也是會被知道的？ 對的&lt;/p&gt;
&lt;p&gt;但是​讀取環境變數僅會在伺服器啟動時讀取一次，所以可以啟動伺服器後將檔案移除，&lt;br&gt;
下次要再重啟時再將檔案放置回去，重啟完再移除檔案，&lt;br&gt;
雖然動作會較繁瑣，但可以確保密碼不被竊取。&lt;/p&gt;
&lt;h2 id=&#34;常見問題&#34;&gt;常見問題&lt;/h2&gt;
&lt;h3 id=&#34;加密時發生-javalangexceptionininitializererror&#34;&gt;加密時發生 java.lang.ExceptionInInitializerError&lt;/h3&gt;
&lt;p&gt;執行 encrypt.sh 時若發生 java.lang.ExceptionInInitializerError，原因可能為 JDK 版本過新，可參考此&lt;a class=&#34;link&#34; href=&#34;https://github.com/jasypt/jasypt/issues/58&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;回答&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ sh ./encrypt.sh input&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;password123 password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;CAT

----ENVIRONMENT-----------------

Runtime: Oracle Corporation Java HotSpot&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;TM&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 64-Bit Server VM 25.281-b09

----ARGUMENTS-------------------

input: password123
password: CAT

----ERROR-----------------------

java.lang.ExceptionInInitializerError&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;​此時可確認一下本機是否有舊版 JDK 使用，使用以下指令查看，若沒有可去下載 JKD 8 261 版本(或更舊)。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ /usr/libexec/java_home -V
Matching Java Virtual Machines &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
    1.8.281.09 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x86_64&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Oracle Corporation&amp;#34;&lt;/span&gt; - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Java&amp;#34;&lt;/span&gt; /Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home
    1.8.0_172-zulu-8.30.0.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x86_64&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Azul Systems, Inc.&amp;#34;&lt;/span&gt; - &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Zulu 8&amp;#34;&lt;/span&gt; /Library/Java/JavaVirtualMachines/zulu-8.jdk/Contents/Home
/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由上清單確認後，我有一個舊版本的 &lt;code&gt;1.8.0_172-zulu-8.30.0.1&lt;/code&gt; 可使用，若想固定本機的 JAVA 版本可以設定在 ~/.bash_profile 裡面，但若只是執行此程式時需要使用此版本，可以在指令前方新增指定 JAVA 版本的設定。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;$ JAVA_HOME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/usr/libexec/java_home -v 1.8.0_172-zulu-8.30.0.1&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; sh ./encrypt.sh input&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;password123 password&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;CAT

----ENVIRONMENT-----------------

Runtime: Azul Systems, Inc. OpenJDK 64-Bit Server VM 25.172-b01

----ARGUMENTS-------------------

input: password123
password: CAT

----OUTPUT----------------------

U9zgvbxBMVbmn/JVKpIGbqHlnjIFglRJ&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Hugo 紀錄</title>
        <link>https://blog.yuuna.dev/p/hugo-%E7%B4%80%E9%8C%84/</link>
        <pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.yuuna.dev/p/hugo-%E7%B4%80%E9%8C%84/</guid>
        <description>&lt;img src="https://blog.yuuna.dev/p/hugo-%E7%B4%80%E9%8C%84/image.jpg" alt="Featured image of post Hugo 紀錄" /&gt;&lt;p&gt;值得紀念的第一篇文章，所以紀錄一下方法&lt;/p&gt;
&lt;h3 id=&#34;本機安裝-hugo&#34;&gt;本機安裝 Hugo&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ brew install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;選擇主題&#34;&gt;選擇主題&lt;/h3&gt;
&lt;p&gt;於 &lt;a class=&#34;link&#34; href=&#34;https://themes.gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Theme&lt;/a&gt; 挑選一個自己喜歡的主題，記得注意 License 。&lt;/p&gt;
&lt;h3 id=&#34;建置專案&#34;&gt;建置專案&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ hugo new site &amp;lt;site-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;主題有提供教學&#34;&gt;主題有提供教學&lt;/h4&gt;
&lt;p&gt;然後可以依照選擇主題裡的教學方式繼續完成建置(如果他有提供教學的話)。&lt;/p&gt;
&lt;h4 id=&#34;主題未提供&#34;&gt;主題未提供&lt;/h4&gt;
&lt;p&gt;至主題的 Git 將 Theme 下載下來，放進專案的 Theme 資料夾裡，以及確認 &lt;code&gt;config.toml&lt;/code&gt; 或 &lt;code&gt;config.yaml&lt;/code&gt; 的設定(當然主題有提供最好&amp;hellip;)。&lt;/p&gt;
&lt;h3 id=&#34;啟動專案&#34;&gt;啟動專案&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ hugo serve
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;新增文章&#34;&gt;新增文章&lt;/h3&gt;
&lt;p&gt;我的專案是以資料夾在使用 index.md，也有其他主題可能不需要墊一層資料夾，直接以 .md 檔案，ex. how-to-use-css.md。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo new post/&amp;lt;folder-name&amp;gt;/index.md
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;部署設定&#34;&gt;部署設定&lt;/h3&gt;
&lt;p&gt;若有要部署至 Github，須將 &lt;code&gt;config.yaml&lt;/code&gt; 的 &lt;code&gt;baseurl&lt;/code&gt; 調整為自己的網址&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;baseurl: https://yuuuna.github.io
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        
    </channel>
</rss>
